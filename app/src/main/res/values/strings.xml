<resources>
    <string name="app_name">AndroidVersions</string>
    <string name="title_item_detail">Item Detail</string>

    <string name="android_pie_desc">Android Pie introduces a major change to power management, using algorithms to prioritize background activity by apps based on long-term usage patterns and predictions, dividing apps into "Active", "Working Set" (run often), "Frequent", "Rare", and "Never". Similar "adaptive brightness" settings are adjusted automatically based on detected lighting conditions. Both of these features were developed in collaboration with DeepMind.

The "PrecomputedText" API (also available as a compatibility library compatible with Android 4.0 and newer) can be used to perform text display processing in a background thread as opposed to a UI thread to improve performance. The fingerprint authentication API has also been revamped to account for different types of biometric authentication experiences (including face scanning and in-screen fingerprint readers).

Android Runtime can now create compressed bytecode files, and profiler data can be uploaded to Google Play servers to be bundled with apps when downloaded by users with a similar device.

Apps targeting older Android API levels (beginning with Android 4.2) display a warning when launched. Google Play Store is now requiring all apps to target an API level released within the past year, and will also mandate 64-bit support in 2019.

Android Pie supports IEEE 802.11mc, including Wi-Fi Round Trip Time for location positioning.

The camera API now supports accessing multiple cameras at once. Apps may no longer perform background audio or video recording unless they run a foreground service. There is support for the High Efficiency Image Format (subject to patent licensing and hardware support) and VP9 Profile 2.

DNS over TLS is supported under the name "Private DNS".

Android Go for Android Pie uses less storage than the previous release, and has enhancements to security and storage tracking.</string>

    <string name="android_oreo_desc">Android Oreo adds support for Neighborhood Aware Networking (NAN) for Wi-Fi based on Wi-Fi Aware, Bluetooth 5, wide color gamuts in apps, an API for autofillers, multiprocess and Google Browsing support for WebViews, an API to allow system-level integration for VoIP apps, and launching activities on remote displays. Android Runtime (ART) features performance improvements. Android Oreo contains additional limits on apps\' background activities in order to improve battery life. Apps can specify "adaptive icons" for differently-shaped containers specified by themes, such as circles, squares, and squircles.

Android Oreo supports new emoji that were included in the Unicode 10 standard. A new emoji font was also introduced, which notably redesigns its face figures to use a traditional circular shape, as opposed to the "blob" design that was introduced on KitKat.

The underlying architecture of Android was revised so that low-level, vendor-specific code for supporting a device\'s hardware can be separated from the Android OS framework using a hardware abstraction layer known as the "vendor interface". Vendor interfaces must be made forward compatible with future versions of Android. This new architecture, called Project Treble, allows the quicker development and deployment of Android updates for devices, as vendors would only need to make the necessary modifications to their bundled software. All devices shipping with Oreo must support a vendor interface, but this feature is optional for devices being updated to Oreo from an earlier version. The "seamless updates" system introduced in Android 7.0 was also modified to download update files directly to the system partition, rather than requiring them to be downloaded to the user partition first. This reduces storage space requirements for system updates.

Android Oreo introduces a new automatic repair system known as "Rescue Party"; if the operating system detects that core system components are persistently crashing during startup, it will automatically perform a series of escalating repair steps. If all automatic repair steps are exhausted, the device will reboot into recovery mode and offer to perform a factory reset.</string>

    <string name="android_oreo_desc_update">The Android 8.1 update supports the display of battery percentages for connected Bluetooth devices, makes the notification shade slightly translucent, and dims the on-screen navigation keys in order to reduce the possibility of burn-in.

The Android 8.1 update also introduces a neural network API, which is designed to \"[provide] apps with hardware acceleration for on-device machine learning operations.\" This API is designed for use with machine learning platforms such as TensorFlow Lite, and specialized co-processors such as the Pixel Visual Core (featured in Google\'s Pixel 2 smartphones, but dormant until 8.1 is installed), but it also provides a CPU fallback mode.</string>

    <string name="android_nougat_desc">In December 2015, Google announced that Android Nougat would switch its Java Runtime Environment from the defunct Apache Harmony to OpenJDKâ€”the official open source implementation of the Java platform maintained by Oracle Corporation and the Java community. The Android Runtime (ART) now incorporates a profile-guided compilation system, utilizing a JIT compiler and profiling alongside its current ahead-of-time compiler to further optimize apps for a device\'s hardware and other conditions in the background.

Nougat introduces a system for enabling \"seamless\", automatic system updates, based upon and sharing some code with the implementation of similar functionality on Chrome OS. The system uses a pair of SquashFS partitions; the Android system executes from an \"online\" partition, while updates are applied in the background to a redundant \"offline\" partition. On the next boot following the installation of an update, the redundant partition is designated as active, and the device henceforth boots into the updated system. The previous system partition is kept as a backup in case of an update failure, and to serve as the \"offline\" partition for the next update. This system removes the requirement for the device to reboot into the system recovery environment to apply the update (which prevents the device from being used until the update is complete) and also provides the ability for an update to be automatically rolled back in case of a failure. Google chose to enable seamless updates only for devices shipped with Nougat (or later), rather than enabling earlier devices to support the feature after repartitioning. Additionally, due to the ART changes on Nougat, apps no longer need to be re-compiled upon the first boot after a system update.

Developer Preview 2 added platform support for Vulkan, a new low-level 3D-rendering API alternative to OpenGL ES with higher graphics performance.

Nougat is the first version featuring Unicode 9.0 support, and comes with updated emoji, plus support for emoji skin tones.</string>
    <string name="android_nougat_desc_update">A post-release update known as Android 7.1 was pre-loaded onto Google\'s Pixel and Pixel XL smartphones released in October 2016; the new version added support for the Google Daydream VR platform, image keyboards, expanded emoji support (including male and female versions), support for actions to be displayed in menus on home screen app shortcuts, and other new features. A preview of 7.1 for existing Nexus devices was released via Android Beta Program later in the month, and officially released as Android 7.1.1 on December 5, 2016. As of 7.1.1, the Nexus 6 and Nexus 9 were considered end-of-life, and did not receive any further updates.

Android 7.1.2 was released in April 2017, providing various improvements and minor functionality improvements to Nexus and Pixel-branded devices.

Android 7.1 adds native API support for implementing image keyboards; multi-endpoint telephones; shortcut menus and rounded icon assets for apps on launchers; and support for the Google Daydream virtual reality platform. The Daydream environment includes a \"sustained performance mode\" to assist developers in optimizing apps to a device\'s thermal profile, a new head tracking algorithm which combines the input from various device sensors, and integration of system notifications into the VR user interface.</string>

    <string name="android_marshmallow_desc">Android Marshmallow introduces a redesigned application permissions model; apps are no longer automatically granted all of their specified permissions at installation time. An opt-in system is now used, in which users are prompted to grant or deny individual permissions (such as the ability to access the camera or microphone) to an application when they are needed for the first time. Applications remember the grants, which can be revoked by the user at any time. The new permissions model is used only by applications developed for Marshmallow using its software development kit (SDK), and older apps will continue to use the previous all-or-nothing approach. Permissions can still be revoked for those apps, though this might prevent them from working properly, and a warning is displayed to that effect.

Marshmallow introduces new power management schemes known as \"Doze\" and \"App Standby\"; when running on battery power, a device will enter a low-power state if it is inactive and not being physically handled. In this state, network connectivity and background processing are restricted, and only \"high-priority\" notifications are processed. Additionally, network access by apps is deferred if the user has not recently interacted with the app. Apps may request a permission to exempt themselves from these policies, but will be rejected from Google Play Store as a violation of its \"Dangerous Products\" policy if their core functionality is not \"adversely affected\" by them.

Android Marshmallow provides native support for fingerprint recognition on supported devices via a standard API, allowing third-party applications to implement fingerprint-based authentication. Fingerprints can be used for unlocking devices and authenticating Play Store and Google Pay purchases. Android Marshmallow supports USB-C, including the ability to instruct devices to charge another device over USB. Marshmallow also introduces \"verified links\" that can be configured to open directly in their specified application without further user prompts. User data for apps targeting Marshmallow can be automatically backed up to Google Drive over Wi-Fi. Each application receives up to 25 MB of storage, which is separate from a user\'s Google Drive storage allotment.

As of Marshmallow, the Android Compatibility Definition Document contains new security mandates for devices, dictating that those that are capable of accessing encrypted data without affecting performance must enable secure boot and device encryption by default. These conditions comprise part of a specification that must be met in order to be certified for the operating system, and be able to license Google Mobile Services software. The requirement for mandatory device encryption was originally intended to take effect on Lollipop, but was delayed due to performance issues.</string>

    <string name="android_lollipop_desc_update">devices sold in Indonesia and the Philippines. Google officially announced 5.1 by releasing updates for existing devices on March 9, 2015.

Added features:
Improvements and bug fixes to the Overview screen.
Ability to join Wi-Fi networks and control paired Bluetooth devices from quick settings.
Official support for multiple SIM cards.
Device protection: if a device is lost or stolen it will remain locked until the owner signs into their Google account, even if the device is reset to factory settings.
High-definition voice calls, available between compatible 4G LTE devices running Android 5.1.
Improvements to the notification priority system, to more closely replicate the silent mode that was removed from Android 5.0.</string>
    <string name="android_lollipop_desc">Android 5.0 introduces a refreshed notification system. Individual notifications are now displayed on cards to adhere to the material design language, and batches of notifications can be grouped by the app that produced them. Notifications are now displayed on the lock screen as cards, and \"heads up\" notifications can also be displayed as large banners across the top of the screen, along with their respective action buttons. A do-not-disturb feature is also added for notifications. The recent apps menu was redesigned to use a three-dimensional stack of cards to represent open apps. Individual apps can also display multiple cards in the recents menu, such as for a web browser\'s open tabs.

Lollipop also contains major new platform features for developers, with over 5,000 new APIs added for use by applications. For example, there is the possibility to save photos in a raw image format. Additionally, the Dalvik virtual machine was officially replaced by Android Runtime (ART), which is a new runtime environment that was introduced as a technology preview in KitKat. ART is a cross-platform runtime which supports the x86, ARM, and MIPS architectures in both 32-bit and 64-bit environments. Unlike Dalvik, which uses just-in-time compilation (JIT), ART compiles apps upon installation, which are then run exclusively from the compiled version from then on. This technique removes the processing overhead associated with the JIT process, improving system performance.

Lollipop also aimed to improve battery consumption through a series of optimizations known as \"Project Volta\". Among its changes are a new battery saver mode, job-scheduling APIs which can restrict certain tasks to only occur over Wi-Fi, and batching of tasks to reduce the overall amount of time that internal radios are active on. The new developer tool called \"Battery Historian\" can be used for tracking battery consumption by apps while in use. The Android Extension Pack APIs also provide graphics functions such as new shaders, aiming to provide PC-level graphics for 3D games on Android devices.

A number of system-level, enterprise-oriented features were also introduced under the banner \"Android for Work\". The Samsung Knox security framework was initially planned to be used as a foundation for \"Android for Work\", but instead Google opted to use its own technology for segregating personal and work-oriented data on a device, along with the accompanying APIs for managing the environment. With the \"Smart Lock\" feature, devices can also be configured so users do not have to perform device unlocking with a PIN or pattern when being on a trusted location, or in proximity of a designated Bluetooth device or NFC tag. Lollipop was, additionally, to have device encryption enabled by default on all capable devices; however, due to performance issues, this change was held over to its successor, Android Marshmallow.</string>

    <string name="android_kitkat_desc">The overall interface of KitKat further downplays the \"Holo\" interface appearance introduced on 4.0, replacing remaining instances of blue accenting with greys and white (such as the status bar icons). Apps may trigger a translucent status and navigation bar appearance, or trigger a full screen mode (\"Immersive mode\") to hide them entirely. The launcher also received a refreshed appearance, with the implementation of the translucent navigation bars, and the replacement of the black backdrop in the application drawer with a translucent backdrop. Additionally, action overflow menu buttons in apps are always visible, even on devices with the deprecated \"Menu\" navigation key. In the Settings menu, users can now specify a default Home (launcher) and text messaging app.

On stock devices, the Messaging and Movie Studio apps were removed; the former was replaced by Google Hangouts, which supported SMS. The AOSP Gallery app was also deprecated in favor of Google+ Photos.

A new runtime environment known as the Android Runtime (ART), intended to replace the Dalvik virtual machine, was introduced as a technology preview in KitKat. ART is a cross-platform runtime which supports the x86, ARM, and MIPS architectures in both 32-bit and 64-bit environments. Unlike Dalvik, which uses just-in-time compilation (JIT), ART compiles apps upon installation, which are then run exclusively from the compiled version from then on. This technique removes the processing overhead associated with the JIT process, improving system performance.

Devices with 512 MB of RAM or less report themselves as \"low RAM\" devices. Using an API, apps may detect low RAM devices and modify their functionality accordingly. KitKat also supports zram. WebView components were updated to utilize a version of the Google Chrome rendering engine. A new Storage Access Framework API allows apps to retrieve files in a consistent manner; as part of the framework, a new system file picker (branded as \"Documents\") allows users to access files from various sources (including those exposed by apps, such as online storage services).

A public API was introduced for developing and managing text messaging clients. Sensor batching, step detection and counter APIs were also added. KitKat supports host card emulation for near-field communications, which allows apps to emulate a smart card for activities such as mobile payments.</string>

    <string name="android_jellybean_desc_update_2">Android 4.3 consisted of further low-level changes, including Bluetooth low energy and AVRCP support, SELinux, OpenGL ES 3.0, new digital rights management (DRM) APIs, the ability for apps to read notifications, a VP8 encoder, and other improvements.

Android 4.3 also included a hidden privacy feature known as \"App Ops\", which allowed users to individually deny permissions to apps. However, the feature was later removed on Android 4.4.2; a Google spokesperson stated that the feature was experimental and could prevent certain apps from functioning correctly if used in certain ways. The concept was revisited as the basis of a redesigned notifications system for Android 6.0.

Jelly Bean versions are no longer supported by Google.</string>
    <string name="android_jellybean_desc_update">Android 4.2 added additional features to the user interface; the lock screen can be swiped to the left to display widget pages, and swiped to the right to go to the camera. A pane of \"quick settings\" toggles (a feature often seen in OEM Android skins) was also added to the notification areaâ€” accessible by either swiping down with two fingers on phones, swiping down from the top-right edge of the screen on tablets, or pressing a button on the top-right corner of the notifications pane. The previous \"Browser\" application was officially deprecated on 4.2 in favor of Google Chrome for Android. 4.2 also adds gesture typing on the keyboard, a redesigned Clock app, and a new screensaver system known as \"Daydreams\". On tablets, Android 4.2 also supports multiple users.

To promote consistency between device classes, Android tablets now use an expanded version of the interface layout and home screen used by phones by default, with centered navigation keys and a status bar across the top. These changes took effect for small tablets (such as the Nexus 7) on 4.1, and for larger tablets on 4.2. Small tablets on Android are optimized primarily for use in a \"portrait\" (vertical) orientation, giving apps expanded versions of the layouts used by phones. When used in a \"landscape\" (horizontal) orientation, apps adjust themselves into the widescreen-oriented layouts seen on larger tablets. On large tablets, navigation buttons were previously placed in the bottom-left of a bar along the bottom of the screen, with the clock and notification area in the bottom-right.

Android 4.2 added a rewritten Bluetooth stack, changing from the previous Bluez stack (GPL created by Qualcomm) to a rewritten Broadcom open source stack called BlueDroid. The new stack, initially considered \"immature\", promised several forward-looking benefits, including improved support for multiple displays, support for Miracast, native right-to-left support, updated developer tools, further accessibility improvements such as zooming gestures, and a number of internal security improvements such as always-on VPN support and app verification. A new NFC stack was added at the same time.

Jelly Bean versions are no longer supported by Google.</string>

    <string name="android_jellybean_desc">Android "Jelly Bean" is the tenth version of Android and the codename given to three major point releases of the Android mobile operating system developed by Google, spanning versions between 4.1 and 4.3.1.

The first of these three, 4.1, was unveiled at Google\'s I/O developer conference in June 2012, focusing on performance improvements designed to give the operating system a smoother and more responsive feel, improvements to the notification system allowing for "expandable" notifications with action buttons, and other internal changes.

Visually, Jelly Bean\'s interface reflects a refinement of the \"Holo\" appearance introduced by Android 4.0. The default home screen of Jelly Bean received new features, such as the ability for other shortcuts and widgets on a home screen page to re-arrange themselves to fit an item being moved or resized. The notification system was also improved with the addition of \"expandable\" and \"actionable\" notifications; individual notifications can now display additional content or action buttons (such as \"Call back\" or \"Message\" on a missed call), accessible by dragging open the notification with a two-finger gesture. Notifications can also be disabled individually per app.

For developers, 4.1 also added new accessibility APIs, expanded language support with bi-directional text support and user-supplied keymaps, support for managing external input devices (such as video game controllers), support for multichannel, USB, and gapless audio, a new media routing API, low-level access to hardware and software audio and video codecs, and DNS-based service discovery and pre-associated service discovery for Wi-Fi. Android Beam can now also be used to initiate Bluetooth file transfers through near-field communication.

Jelly Bean versions are no longer supported by Google.</string>

    <string name="android_sandwich_desc">Android \"Ice Cream Sandwich\" is the ninth version of the Android mobile operating system developed by Google. Unveiled on October 19, 2011, Android 4.0 builds upon the significant changes made by the tablet-only release Android Honeycomb, in an effort to create a unified platform for both smartphones and tablets.

Android 4.0 was focused on simplifying and modernizing the overall Android experience around a new set of human interface guidelines. As part of these efforts, it introduced a new visual appearance codenamed \"Holo\", which is built around a cleaner, minimalist design, and a new default typeface named Roboto. It also introduced a number of other new features, including a refreshed home screen, near-field communication (NFC) support and the ability to \"beam\" content to another user using the technology, an updated web browser, a new contacts manager with social network integration, the ability to access the camera and control music playback from the lock screen, visual voicemail support, face recognition for device unlocking (\"Face Unlock\"), the ability to monitor and limit mobile data usage, and other internal improvements.

Android 4.0 received positive reviews by critics, who praised the cleaner, revamped appearance of the operating system in comparison to previous versions, along with its improved performance and functionality. However, critics still felt that some of Android 4.0\'s stock apps were still lacking in quality and functionality in comparison to third-party equivalents, and regarded some of the operating system\'s new features, particularly the \"face unlock\" feature, as being gimmicks.

Android 4.0.3 was released on December 16, 2011, providing bug fixes, a new social stream API, and other internal improvements. The same day, Google began a rollout of Ice Cream Sandwich to the predecessor of the Galaxy Nexus, the Nexus S. However, on December 20, 2011, the Nexus S roll-out was \"paused\" so the company could \"monitor feedback\" related to the update.

On March 29, 2012, Android 4.0.4 was released, promising performance improvements to the camera and screen rotation, and other bug fixes.

As of May 2019, statistics issued by Google indicate that 0.3% of all Android devices accessing Google Play run Ice Cream Sandwich</string>

    <string name="android_gingerbread_desc">Android \"Gingerbread\" is the seventh version of Android, a codename of the Android mobile operating system developed by Google and released in December 2010, for versions that are no longer supported. The Gingerbread release introduced support for near field communication (NFC) â€” used in mobile payment solutions â€” and Session Initiation Protocol (SIP) â€” used in VoIP internet telephones.

Gingerbread\'s user interface was refined in many ways, making it easier to master, faster to use, and more power-efficient. A simplified color scheme with a black background gave vividness and contrast to the notification bar, menus, and other user interface components. Improvements in menus and settings resulted in easier navigation and system control.

The Nexus S smartphone, released in December 2010, was the first phone from the Google Nexus line that ran Gingerbread, and also the first one from the line with built-in NFC functionality.

As of May 2019, statistics issued by Google indicate that 0.3% of all Android devices accessing Google Play run Gingerbread.</string>

    <string name="error">Error</string>
    <string name="detail_version">Version: %1$s</string>
    <string name="detail_name">Name: %1$s</string>
    <string name="detail_released">Released: %1$s</string>
    <string name="detail_api">API: %1$s</string>
    <string name="detail_distribution">Distribution: %1$s%%</string>

</resources>
